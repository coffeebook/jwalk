{"name":"jwalk","tagline":"command-line json inspector","body":"**jwalk** provides an easy way to inspect the object tree created by a JSON file via the command line.\r\nThe interface provided is a lot like a typical shell, with familiar commands like `cd` and `ls`.\r\n\r\n## Installation\r\n\r\nMore documentation (and fewer bugs) coming soon. In the meantime, install it via npm:\r\n\r\n```\r\nnpm install -g jwalk\r\n```\r\n\r\n## Running\r\nAnd then run it like this:\r\n\r\n```\r\njwalk somefile.json\r\n```\r\n\r\nIt can also handle gzipped files. If the extension is .gz, it will decompress the JSON data automatically.\r\n\r\n```\r\njwalk somefile.json.gz\r\n```\r\n\r\n## Possible Commands\r\n\r\nGiven the following json file\r\n\r\n````javascript\r\n{\r\n  \"name\": \"jwalk\",\r\n  \"version\": \"0.0.4\",\r\n  \"description\": \"command-line json inspector\",\r\n  \"preferGlobal\": \"true\",\r\n  \"repositories\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"http://github.com/nkohari/jwalk\"\r\n  },\r\n  \"bin\": {\r\n    \"jwalk\": \"bin/jwalk\"\r\n  },\r\n  \"dependencies\": {\r\n    \"coffee-script\": \"1.4.0\",\r\n    \"colors\": \"0.6.0-1\",\r\n    \"filesize\": \"1.6.6\",\r\n    \"underscore\": \"1.4.2\"\r\n  },\r\n  \"engine\": \"node >= 0.8.x\"\r\n}\r\n````\r\n\r\n### Help\r\n\r\nShows this help message\r\n\r\n```\r\njwalk obj{8} / $ help\r\n\r\ncd navigates through nodes in the tree\r\nclear clears the screen\r\ncls clears the screen\r\nexit quit jwalk\r\nhelp shows this help message\r\nkeys examines the keys of an object node\r\nls examines a single node\r\nquit quit jwalk\r\n```\r\n\r\n### List\r\n\r\nExamines the current node\r\n\r\n```\r\njwalk obj{8} / $ ls\r\n{ name: 'jwalk',\r\n  version: '0.0.4',\r\n  description: 'command-line json inspector',\r\n  preferGlobal: 'true',\r\n  repositories: \r\n   { type: 'git',\r\n     url: 'http://github.com/nkohari/jwalk' },\r\n  bin: { jwalk: 'bin/jwalk' },\r\n  dependencies: \r\n   { 'coffee-script': '1.4.0',\r\n     colors: '0.6.0-1',\r\n     filesize: '1.6.6',\r\n     underscore: '1.4.2' },\r\n  engine: 'node >= 0.8.x' }\r\n```\r\n\r\n### Change Directory\r\n\r\nAllows navigation through the JSON tree. Note 'cd' does support autocomplete by pressing the tab key.\r\n\r\n```\r\njwalk obj{8} / $ cd dependencies\r\njwalk obj{4} /dependencies $ ls\r\n{ 'coffee-script': '1.4.0',\r\n  colors: '0.6.0-1',\r\n  filesize: '1.6.6',\r\n  underscore: '1.4.2' }\r\n```\r\n\r\n### Clear\r\n\r\nClears the screen\r\n\r\n```\r\njwalk obj{8} / $ clear\r\n```\r\nor\r\n\r\n```\r\njwalk obj{8} / $ cls\r\n```\r\n\r\n### Keys\r\n\r\nExamines the keys of an object node\r\n\r\n```\r\njwalk obj{8} / $ keys\r\n[ 'name',\r\n  'version',\r\n  'description',\r\n  'preferGlobal',\r\n  'repositories',\r\n  'bin',\r\n  'dependencies',\r\n  'engine' ]\r\n```\r\n\r\n### Quit\r\n\r\nExits the jwalk application\r\n\r\n```\r\njwalk obj{8} / $ exit\r\n```\r\nor\r\n\r\n```\r\njwalk obj{8} / $ quit\r\n```\r\n\r\n## Preferences File\r\n\r\nYou can create a JSON file at `~/.jwalk` to define preferences. Right now, all it supports is defining aliases for commands, like so:\r\n\r\n```json\r\n{\r\n  \"aliases\": {\r\n    \"l\": \"ls\"\r\n  }\r\n}\r\n```\r\n\r\n## Contributing\r\n\r\nBug reports and pull requests welcome!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}